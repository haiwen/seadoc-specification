{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Welcome to SeaDoc Specification","text":"<p>This project mainly describes the document node types supported by sdoc files and the data structure of document node types to facilitate the use and communication of data.</p>"},{"location":"readme/","title":"SeaDoc Documentation Introduction","text":"<p>This project mainly describes the document node types supported by sdoc files and the data structure of document node types to facilitate the use and communication of data.</p>"},{"location":"support-types/","title":"SeaDoc support node types","text":""},{"location":"support-types/#generic-nodes","title":"Generic nodes","text":"<p>All nodes include the following attributes: <code>id</code> (required, string) represents a unique ID, a random UUID string with 22 characters for the node. <code>type</code> (required, string) represents the node type. <code>children</code> (required, array) represents an array of child nodes. The innermost within children are always text nodes.</p>"},{"location":"support-types/#node-types","title":"Node types","text":"<ol> <li>blockquote</li> <li>callout</li> <li>check_list_item</li> <li>code_block</li> <li>file_link</li> <li>header</li> <li>image</li> <li>link</li> <li>list</li> <li>mention</li> <li>multi_column</li> <li>paragraph</li> <li>sdoc_link</li> <li>table</li> <li>video</li> </ol>"},{"location":"data-structure/blockquote/","title":"Blockquote","text":"<p>Blockquote type nodes represent quoted content, typically used to highlight or display citations, quotes, or references.  Blockquote nodes contain a <code>paragraph</code> node, which in turn holds a <code>text</code> node that displays the quoted content.</p>"},{"location":"data-structure/blockquote/#node-structure-example","title":"Node structure example","text":"<pre><code>{\n  \"id\": \"awGPshsHSry9cQJuKxvHGg\", \n  \"type\": \"blockquote\",\n  \"children\": [\n    {\n      \"id\": \"VVKieoeQRa-b8UP-AxnVIg\",\n      \"type\": \"paragraph\",\n      \"children\": [\n        {\n        \"id\": \"JT6oOyplQm-270FdGw_M-A\",\n        \"text\": \"Quote content\"\n        }\n      ]\n    }\n  ]\n}\n</code></pre>"},{"location":"data-structure/callout/","title":"Callout","text":"<p>Callout type nodes are used to highlight specific content, often for emphasis. Along with generic node attributes, callout nodes include the following attribute:</p> <ul> <li><code>background_color</code> (required, string)  represents the highlighted background color. The default value is '#fef7e0'.</li> </ul> <p>Callout nodes contain a <code>paragraph</code> node, which in turn holds a <code>text</code> node that display the callout content.</p>"},{"location":"data-structure/callout/#node-structure-example","title":"Node structure example","text":"<pre><code>{\n  \"id\": \"U2DUIYK1T6qEAtCORbB1ZA\", \n  \"type\": \"callout\",\n  \"style\": { \"background_color\": \"#fef7e0\" }\n  \"children\": [\n    {\n      \"id\": \"cCs57hn6SfmVHclXYzZ6RQ\",\n      \"type\": \"paragraph\",\n      \"children\": [\n        {\n        \"id\": \"JT6oOyplQm-270FdGw_M-A\",\n        \"text\": \"Callout content\"\n        }\n      ]\n    }\n  ]\n}\n</code></pre>"},{"location":"data-structure/check_list_item/","title":"Check_list_item","text":"<p>Check_list_item type nodes represent items in a checklist. Check_list_item nodes always start with a checkbox that tracks whether the item is completed or checked.</p> <p>Each check_list_item nodes contain a <code>text</code> node that displays the content of checklist item.</p>"},{"location":"data-structure/check_list_item/#node-structure-example","title":"Node structure example","text":"<pre><code>{\n  \"id\": \"Sgs2yIs4RHO4YVRb0rGunQ\",\n  \"type\": \"check_list_item\",\n  \"children\": [\n    {\n      \"id\": \"FySw4pSBTjuqhKzBhEwP_A\", \n      \"text\": \"checklist content\"\n    }\n  ]\n}\n</code></pre>"},{"location":"data-structure/code_block/","title":"Code_block","text":"<p>Code_block type nodes represent a block of code. Along with generic node attributes, code_block nodes include the following attribute:</p> <ul> <li> <p><code>language</code> (required, string) specifies the programming language used in the code. The default value is 'plaintext'.</p> </li> <li> <p><code>white_space</code> (requires, string) specifies how white space should be handled in the block. The default value is 'nowrap'.</p> </li> </ul> <p>Code_block nodes contains <code>code-line</code> child nodes, where each code-line node represents a single line of the code. Each code-line node holds a <code>text</code> node that displays the code content.</p>"},{"location":"data-structure/code_block/#node-structure-example","title":"Node structure example","text":"<pre><code>{\n  \"id\": \"Sgs2yIs4RHO4YVRb0rGunQ\",\n  \"type\": \"code_block\",\n  \"language\": \"javascript\",\n  \"style\": {\n      \"white_space\": \"nowrap\"\n  },\n  \"children\": [\n    {\n      \"id\": \"N4QoQh3-RFSQzvaTgJityQ\",\n      \"type\": \"code_line\",\n      \"children\": [\n        {\n          \"text\": \"code content1\",\n          \"id\": \"P95HPWnYTay4FkT1BQ27tw\"\n        }\n      ]\n    }, \n    {\n      \"id\": \"DKbt3HrRSY6A5zYEI3UEpg\",\n      \"type\": \"code_line\",\n      \"children\": [\n        {\n          \"text\": \"code content2';\",\n          \"id\": \"O3Hcb450Q5Cd1inMrjksYw\"\n        }\n      ]\n    }\n    ...\n  ]\n}\n</code></pre>"},{"location":"data-structure/file_link/","title":"File_link","text":"<p>File_link type nodes reference a link to an external file in a non-sdoc format, such as .md and .txt and others. File_link nodes are inline nodes, typically wrapped within <code>paragraph</code> nodes. Along with generic node attributes, file_link nodes include the following attributes:</p> <ul> <li> <p><code>doc-uuid</code> (required, string) represents the file address within Sdoc.</p> </li> <li> <p><code>title</code> (required, string) represents the filename.</p> </li> <li> <p><code>display-type</code> (required, string) represents display type of file.</p> </li> </ul> <p>File_link nodes contain a <code>text</code> node that displays the filename.</p>"},{"location":"data-structure/file_link/#node-structure-example","title":"Node structure example","text":"<pre><code>{\n  \"id\": \"afLKcmNdR4ii2ZqvH8PP8w\",\n  \"type\": \"file_link\",\n  \"doc_uuid\": \"c24cee20-88c2-4dba-beb9-4032c5e2c3e1\",\n  \"title\": \"aaa.txt\",\n  \"display_type\": \"text_link\",\n  \"children\": [\n    {\n    \"id\": \"bKfw6ms4QlqUf1J5aFCr4w\",\n    \"text\": \"aaa.txt\"\n    }\n  ]\n}\n</code></pre>"},{"location":"data-structure/header/","title":"Header","text":"<p>Header type nodes represent the header content, supporting six header type nodes (<code>header1</code>  to <code>header6</code>).</p> <p>Sdoc_link nodes contain a <code>text</code> node that displays the header content.</p>"},{"location":"data-structure/header/#node-structure-example","title":"Node structure example","text":"<pre><code>{\n  \"id\": \"G1opTnrHRr6aX7qbJXZJiw\",\n  \"type\": \"header1\",\n  \"children\": [\n    {\n      \"id\": \"D_bLOntqQHSZ8lu9VJn_JQ\",\n      \"text\": \"header content\",\n    }\n  ]\n}\n</code></pre>"},{"location":"data-structure/image/","title":"Image","text":"<p>Image-related type nodes represent images within Sdoc. Image-related nodes consist of the following node types:</p> <p>Image nodes</p> <p><code>image</code> nodes are inline nodes, typically wrapped within <code>paragraph</code> nodes. Along with generic node attributes, image nodes include the following attribute:</p> <ul> <li><code>data</code> (required, object) contains <code>src</code> (required, string) field that specifies the image address within Sdoc.</li> </ul> <p>Image_block nodes</p> <p><code>Image_block</code> nodes represents block-level element containing a single\u00a0inline image node that spans the entire width of the block.</p>"},{"location":"data-structure/image/#node-structure-example","title":"Node structure example","text":""},{"location":"data-structure/image/#image-nodes","title":"Image nodes","text":"<pre><code>{\n  \"id\": \"c-GkcbFsS3uuYNtMgsg2mQ\",\n  \"type\": \"image\",\n  \"data\": {\n    \"src\": \"/image-aYZp6SvrTQyBbMOkxo0s6Q.png\"\n  }\n  \"children\": [\n    {\n      \"id\": \"PUoT91gOSoS8hB-HObsD1g\",\n      \"text\": \"\",\n    }\n  ]\n}\n</code></pre>"},{"location":"data-structure/image/#image_block-nodes","title":"Image_block nodes","text":"<pre><code>{\n  \"id\": \"S927zAqWQHOkmLEvFespbw\",\n  \"type\": \"image_block\",\n  \"children\": [\n    {\n      \"id\": \"AW53tbxhQYu-HfoSNTfVxQ\",\n      \"text\": \"\",\n    }, \n    {\n      \"id\": \"c-GkcbFsS3uuYNtMgsg2mQ\",\n      \"type\": \"image\",\n      \"data\": {\n        \"src\": \"/image-aYZp6SvrTQyBbMOkxo0s6Q.png\"\n      }\n      \"children\": [\n        {\n          \"id\": \"PUoT91gOSoS8hB-HObsD1g\",\n          \"text\": \"\",\n        }\n      ]\n    },\n    {\n      \"id\": \"AW53tbxhQYu-HfoSNTfVxQ\",\n      \"text\": \"\",\n    }, \n  ]\n}\n</code></pre>"},{"location":"data-structure/link/","title":"Link","text":"<p>Link type nodes reference a hyperlink within the text content. Link nodes are inline nodes, typically wrapped within <code>paragraph</code> nodes. Along with generic node attributes, link nodes include the following attributes:</p> <ul> <li> <p><code>href</code> (required, string) represents the URL of the link. </p> </li> <li> <p><code>title</code> (required, string) represents the display text of the link.</p> </li> </ul> <p>Link nodes contain a <code>text</code> node that displays the actual text content of the link.</p>"},{"location":"data-structure/link/#node-structure-example","title":"Node structure example","text":"<pre><code>{\n  \"id\": \"eduiixSdSwudGpUcqWrPqA\",\n  \"type\": \"link\",\n  \"href\": \"http://127.0.0.1:4000/simple-markdown-editor\",\n  \"title\": \"text content\",\n  \"children\": [\n    {\n    \"id\": \"acHUS5G5SP-0ltl04_rdzg\",\n    \"text\": \"text content\"\n    }\n  ]\n}\n</code></pre>"},{"location":"data-structure/list/","title":"List","text":"<p>List-related type nodes are used to represent ordered and unordered lists. List-related nodes consist of the following node types:</p> <p>Ordered_list nodes</p> <p><code>ordered_list</code>  nodes represent an ordered list, where items are numbered.</p> <p>Unordered_list nodes</p> <p><code>unordered_list</code> nodes represent an unordered list, where items are marked with bullet points.</p> <p>Both of list nodes include <code>list_item</code>\uff08required, node\uff09child nodes, representing individual items within the list. Each list_item node contains a <code>paragraph</code> node, which in turn holds a <code>text</code> node that displays the content of the list item.</p>"},{"location":"data-structure/list/#node-structure-example","title":"Node structure example","text":""},{"location":"data-structure/list/#ordered_list-nodes","title":"Ordered_list nodes","text":"<pre><code>{\n  \"id\": \"S927zAqWQHOkmLEvFespbw\",\n  \"type\": \"ordered_list\",\n  \"children\": [\n    {\n      \"id\": \"AW53tbxhQYu-HfoSNTfVxQ\",\n      \"type\": \"list_item\",\n      \"children\": [{\n        \"id\": \"FZq5VuH8SM-_lE_UKI2GUw\",\n        \"type\": \"paragraph\",\n        \"children\": [\n          {\n            \"id\": \"NS1OQ71aQ0-VfxtMyqtszw\",\n            \"text\": \"ordered list 1\"\n          }\n        ]\n      }]\n    }, \n    {\n      \"id\": \"c-GkcbFsS3uuYNtMgsg2mQ\",\n      \"type\": \"list_item\",\n      \"children\": [{\n        \"id\": \"PUoT91gOSoS8hB-HObsD1g\",\n        \"type\": \"paragraph\",\n        \"children\": [\n          {\n            \"id\": \"QEA-1fOPSSa0o3HPEGPPIg\",\n            \"text\": \"ordered list 2\"\n          }\n        ]\n      }]\n    },\n    ...\n  ]\n}\n</code></pre>"},{"location":"data-structure/list/#unordered_list-nodes","title":"Unordered_list nodes","text":"<pre><code>{\n  \"id\": \"S927zAqWQHOkmLEvFespbw\",\n  \"type\": \"unordered_list\",\n  \"children\": [\n    {\n      \"id\": \"AW53tbxhQYu-HfoSNTfVxQ\",\n      \"type\": \"list_item\",\n      \"children\": [{\n        \"id\": \"FZq5VuH8SM-_lE_UKI2GUw\",\n        \"type\": \"paragraph\",\n        \"children\": [\n          {\n            \"id\": \"NS1OQ71aQ0-VfxtMyqtszw\",\n            \"text\": \"Unordered list 1\"\n          }\n        ]\n      }]\n    }, \n    {\n      \"id\": \"c-GkcbFsS3uuYNtMgsg2mQ\",\n      \"type\": \"list_item\",\n      \"children\": [{\n        \"id\": \"PUoT91gOSoS8hB-HObsD1g\",\n        \"type\": \"paragraph\",\n        \"children\": [\n          {\n            \"id\": \"QEA-1fOPSSa0o3HPEGPPIg\",\n            \"text\": \"Unordered list 2\"\n          }\n        ]\n      }]\n    },\n    ...\n  ]\n}\n</code></pre>"},{"location":"data-structure/mention/","title":"Mention","text":"<p>Mention type nodes represent a mention of participants or users with Sdoc. Along with generic node attributes, mention nodes includes the following attribute:</p> <ul> <li><code>username</code> (required, string) is a unique string that identifies the participant.</li> </ul> <p>Mention nodes contain a <code>text</code> node that always starts with <code>@</code> symbol followed by the  participant's name.</p>"},{"location":"data-structure/mention/#node-structure-example","title":"Node structure example","text":"<pre><code>{\n  \"id\": \"afLKcmNdR4ii2ZqvH8PP8w\",\n  \"type\": \"mention\",\n  \"username\": \"36029b7bffc74aae8a09fc5d453b99e2@auth.local\",\n  \"children\": [\n    {\n    \"id\": \"bKfw6ms4QlqUf1J5aFCr4w\",\n    \"text\": \"@username\"\n    }\n  ]\n}\n</code></pre>"},{"location":"data-structure/multi_column/","title":"Multi column","text":"<p>Multi-column type nodes represent a layout with multiple columns, useful for displaying content in a structured and side-by-side format. Along with generic node attributes, multi-column nodes include the following attributes:</p> <ul> <li> <p><code>gridTemplateColumns</code> (required, string) specifies the column layout using CSS grid syntax, defining the number of columns and their respective widths.</p> </li> <li> <p><code>columns</code> (required, array) defines an array of width and left position of each column.</p> </li> </ul> <p>Multi-column nodes includes multiple <code>column</code> (required, node) nodes, each representing an individual column in the layout. Each column node contains a <code>paragraph</code> node, which in turn holds a <code>text</code> node that displays the column content.</p>"},{"location":"data-structure/multi_column/#node-structure-example","title":"Node structure example","text":"<pre><code>{\n\n  \"id\": \"ZO5pAIMaTLyuKMUswc02NA\",\n  \"type\": \"multi_column\", \n  \"style\": \"repeat(3, 224px)\",\n  \"columns\": [\n    {\n      \"key\": \"dypqfMOuTZCKwCa13QQ5-A\", \n      \"width\": 200, \n      \"left\": 200\n    },\n    {\n      \"key\": \"dEUv4oFgS52Awuxt-_h7ZA\", \n      \"width\": 248, \n      \"left\": 248\n    }\n    {\n      \"key\": \"VLqGwLUyQQuEZ6X-nBnq9g\", \n      \"width\": 224, \n      \"left\": 224\n    }\n  ]\n  \"children\": [ \n    {\n      \"id\": \"dypqfMOuTZCKwCa13QQ5-A\", \n      \"type\": \"column\",\n      \"width\": 200,\n      \"children\": [ \n        {\n          \"id\": 'Vtvx0SEOSZuyrsNug2hhLQ', \n          \"type\": 'paragraph',\n          \"children\": [\n            {\n              \"text\": \"column 1 content\", \n              \"id\": \"D25vYec_T2S68pZx3JKiaw\" \n            }\n          ]\n        }\n      ]\n    },\n    {\n      \"id\" \"dEUv4oFgS52Awuxt-_h7ZA\",\n      \"type\": \"column\",\n      \"width\": 248,\n      \"children\": [ \n        {\n          \"id\": 'T34vx0SEOSZuyrsNug2hhLQ', \n          \"type\": 'paragraph',\n          \"children\": [\n            {\n              \"text\": \"column 2 content\", \n              \"id\": \"R455vYec_T2S68pZx3JKiaw\" \n            }\n          ]\n        }\n      ]\n    },\n    {\n      \"id\": \"VLqGwLUyQQuEZ6X-nBnq9g\",\n      \"type\": \"column\",\n      \"width\": 224,\n      \"children\": [ \n        {\n          \"id\": \"FIJxlp7XRbOOVd-Mc-pzoQ\", \n          \"type\": 'paragraph',\n          \"children\": [\n            {\n              \"text\": \"column 3 content\", \n              \"id\": \"OEtHz_AlQSO99dj9SiTPug\" \n            }\n          ]\n        }\n      ]\n    },     \n  ],\n}\n</code></pre>"},{"location":"data-structure/paragraph/","title":"Paragraph","text":"<p>Paragraph type nodes are basic content nodes to present inline text. Paragraph nodes act as the foundational block for textual content and support a variety of inline formatting.</p> <p>Paragraph nodes contain a <code>text</code> node that displays the actual text content.</p>"},{"location":"data-structure/paragraph/#node-structure-example","title":"Node structure example","text":"<pre><code>{\n  \"id\": \"afLKcmNdR4ii2ZqvH8PP8w\",\n  \"type\": \"paragraph\",\n  \"children\": [\n    {\n    \"id\": \"bKfw6ms4QlqUf1J5aFCr4w\",\n    \"text\": \"text content\"\n    }\n  ]\n}\n</code></pre>"},{"location":"data-structure/sdoc_link/","title":"Sdoc_link","text":"<p>Sdoc_link type nodes reference a link to another Sodc file. Sdoc_link nodes are inline nodes, typically wrapped within <code>paragraph</code> nodes. Along with generic node attributes, sdoc_link nodes include the following attributes:</p> <ul> <li> <p><code>doc-uuid</code> (required, string) represents the file address within Sdoc.</p> </li> <li> <p><code>title</code> (required, string) represents the filename.</p> </li> <li> <p><code>display-type</code> (required, string) represents display type of file.</p> </li> </ul> <p>Sdoc_link nodes contain a <code>text</code> node that displays the filename.</p>"},{"location":"data-structure/sdoc_link/#node-structure-example","title":"Node structure example","text":"<pre><code>{\n  \"id\": \"afLKcmNdR4ii2ZqvH8PP8w\",\n  \"type\": \"sdoc_link\",\n  \"doc_uuid\": \"c24cee20-88c2-4dba-beb9-4032c5e2c3e1\",\n  \"title\": \"aaa.sdoc\",\n  \"display_type\": \"text_link\",\n  \"children\": [\n    {\n    \"id\": \"bKfw6ms4QlqUf1J5aFCr4w\",\n    \"text\": \"aaa.sdoc\"\n    }\n  ]\n}\n</code></pre>"},{"location":"data-structure/table/","title":"Table","text":"<p>Table type nodes represent a table. Along with generic node attributes, table nodes include the following attributes: - <code>gridTemplateColumns</code> (required, string) specifies the column layout using CSS grid syntax, defining the number of columns and their respective widths.</p> <ul> <li> <p><code>gridAutoRows</code> (required, string) specifies the minimum height for each row.</p> </li> <li> <p><code>columns</code> (required, array) defines an array of width of each column metadata.</p> </li> </ul> <p>Table nodes includes <code>table_row</code>(required, node) child nodes, representing rows within table. Each table_row node contains <code>table_cell</code>(required, node) child nodes, representing individual cells within a row. Each table_cell node contains a <code>text</code> node that displays the content of th cell.</p>"},{"location":"data-structure/table/#node-structure-example","title":"Node structure example","text":"<pre><code>{\n  \"id\": \"G70G_NH_QF-WvJLlFPG1bg\",\n  \"type\": \"table\",\n  \"style\": {\n    \"gridAutoRows\": \"minmax(42px, auto)\", \n    \"gridTemplateColumns\": \"repeat(2, 336px)\"\n  }\n  \"columns\": [\n    { \"width\": 336 },\n    { \"width\": 336 }\n  ]\n  \"children\": [\n    {\n      \"id\": \"Mr8wLrYBQOeKlvni1HywUw\",\n      \"type\": \"table_row\",\n      \"style\": { \"min_height\": 42 }\n      \"children\": [\n        {\n          \"id\": \"BiWIgCy0TqecA3DsXqOh7Q\",\n          \"type\": \"table_cell\",\n          \"children\": [{\n              \"text\": \"name\",\n              \"id\": \"KlwwLiWAQVi7uLQlRuJjdg\"\n          }]\n        }, \n        {\n          \"id\": \"Tpx8x7afTzWhjCcBxmus2g\",\n          \"type\": \"table_cell\",\n          \"children\": [{\n              \"text\": \"class\",\n              \"id\": \"M13HGrtGSV6e0g-dB8cw3A\"\n          }]\n        }\n      ],\n    }, \n    {\n      \"id\": \"Mr8wLrYBQOeKlvni1HywUw\",\n      \"type\": \"table_row\",\n      \"style\": { \"min_height\": 42 }\n      \"children\": [\n        {\n          \"id\": \"BiWIgCy0TqecA3DsXqOh7Q\",\n          \"type\": \"table_cell\",\n          \"children\": [{\n              \"text\": \"name\",\n              \"id\": \"KlwwLiWAQVi7uLQlRuJjdg\"\n          }]\n        }, \n        {\n          \"id\": \"Tpx8x7afTzWhjCcBxmus2g\",\n          \"type\": \"table_cell\",\n          \"children\": [{\n              \"text\": \"class\",\n              \"id\": \"M13HGrtGSV6e0g-dB8cw3A\"\n          }]\n        }\n      ],\n    }, \n    ...\n  ]\n}\n</code></pre>"},{"location":"data-structure/video/","title":"Video","text":"<p>Video type nodes represents video content. Along with generic node attributes, video nodes include <code>data</code>(required, object) attribute with the following properties:</p> <ul> <li> <p><code>src</code> (required, string) specifies the video address within Sdoc.</p> </li> <li> <p><code>videoFiles</code> (required, object) provides metadata about the video file, containing the following attributes: </p> <ul> <li> <p><code>filename</code> (required, string) is the name of the video file.</p> </li> <li> <p><code>lastModified</code>(required, number) indicates the timestamp of the last modification in milliseconds since the Unix epoch.</p> </li> <li> <p><code>lastModifiedDate</code>(required, Date) specifies the date and time when the video file was last modified.</p> </li> <li> <p><code>size</code>(required, number) is the size of the video file in bytes.</p> </li> </ul> </li> </ul> <p>Video nodes contain an empty <code>text</code> node.</p>"},{"location":"data-structure/video/#node-structure-example","title":"Node structure example","text":"<pre><code>{\n  \"id\": \"c5o2vli_St6hAQyHdvwGkg\",\n  \"type\": \"video\",\n  \"data\": {\n    \"src\": \"/video-Hd3JcWkARqyJ-I0geiIgPQ.mov\",\n    \"videoFiles\": {\n      \"name\": \"video name.mov\",\n      \"lastModified\": 1731406823157,\n      \"lastModifiedDate\": Tue Nov 12 2024 18:20:23 GMT+0800,\n      \"size\": 2357967\n    }\n  }\n  \"children\": [\n    {\n      \"id\": \"YcA-XKAAQf6Ff7V7Xj4KaA\",\n      \"text\": \"\",\n    }\n  ]\n}\n</code></pre>"}]}